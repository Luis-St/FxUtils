plugins {
	id "java"
	id "org.openjfx.javafxplugin" version "${OpenJfx}"
	id "maven-publish"
}

repositories {
	mavenCentral()
	maven {
		url "https://maven.luis-st.net/libraries/"
	}
}

javafx {
	version = "${JavaFx}"
	modules = [ "javafx.controls" ]
}

dependencies {
	// Local
	implementation "org.controlsfx:ControlsFx:${ControlsFx}" // FX
	// Other
	implementation "org.jetbrains:annotations:${JetBrainsAnnotations}" // Annotations
}


java {
	withSourcesJar()
}

javadoc {
	exclude("**/Main.java")
	options.memberLevel = JavadocMemberLevel.PRIVATE
}

artifacts {
	archives sourcesJar
}

tasks.register("run", JavaExec) {
	group = "runs"
	getMainClass().set("net.luis.fxutils.Main")
	classpath = sourceSets.main.runtimeClasspath
	enableAssertions = true
	args()
	jvmArgs()
}

def username = ""
def password = ""
def file = file("./../../credentials.properties")
if (file.exists()) {
	def properties = new Properties()
	file.withInputStream {properties.load(it)}
	username = properties.getProperty("username")
	password = properties.getProperty("password")
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = "net.luis"
			artifactId = "FxUtils"
			version = "2.0.0"
			artifact jar
			artifact sourcesJar
		}
	}
	repositories {
		if (!username.isBlank() && !password.isBlank()) {
			maven {
				url "https://maven.luis-st.net/libraries/"
				credentials.username = username
				credentials.password = password
			}
		} else {
			System.err.println("No credentials provided. Publishing to maven.luis-st.net not possible.")
		}
	}
}

sourcesJar {
	exclude("**/Main.java")
}

jar {
	exclude("net/luis/fxutils/Main.class")
	manifest {
		attributes([
			"Built-By": "Luis Staudt",
			"Multi-Release": "true"
		])
	}
}
